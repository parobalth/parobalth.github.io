{"pages":[{"url":"http://parobalth.github.io/chip-intro","text":"Warning — work in progress: This is a quick&dirty post about the first steps to connect NextThing C.h.i.p via USB serial on a Debian Jessie machine. Consider it as a first draft — I am going to modify this post in the next few days and correct typos. Introduction I recieved my NextThing C.h.i.p. this week! It is a 9$ computer and comes already flashed with the C.h.i.p. OS based on Debian. I took some notes during my first steps with chip: This is the official Documentation . Headless via USB I used this part of the official documentation as a starting point. I like headless ssh-connections but you can't reach your chip because wifi is not yet configured with your network. I used a USB serial connection. Note that I use Debian Jessie (stable). Connect your Chip with a standard USB -to-usb-micro-cable to the usb-port of your Computer/Laptop and run: dmesg -w Output will be similar to: usb 1-2: New USB device found, idVendor=0525, idProduct=a4a7 usb 1-2: New USB device strings: Mfr=1, Product=2, SerialNumber=0 usb 1-2: Product: Gadget Serial v2.4 usb 1-2: Manufacturer: Linux 4.3.0-ntc with musb-hdrc cdc_acm 1-2:2.0: This device cannot do calls on its own. It is not a modem. cdc_acm 1-2:2.0: ttyACM0: USB ACM device So your Chip is recognized as ‘ ttyACM0 ‘. I had some permission problems and had to connect with sudo screen /dev/ttyACM0 Login as root with password chip . set up a wifi connection with nmtui: nmtui Now you can ssh into chip but you may want to change the root password ( passwd ) first, create a normal user ( adduser foo ) and forbid root login via ssh (change settings in /etc/ssh/sshd_config). Add your user ‘foo' to the sudo group with ‘ adduser foo sudo ‘ Now you can ssh to your chip with (replace ‘foo' with your username and ‘xxx.xxx.x.x' with the IP adress of chip): ssh foo@xxx.xxx.x.x Let us have a look at the sources.list: deb http://ftp.us.debian.org/debian/ jessie main contrib non-free deb-src http://ftp.us.debian.org/debian/ jessie main contrib non-free deb http://security.debian.org/ jessie/updates main contrib non-free deb-src http://security.debian.org/ jessie/updates main contrib non-free deb http://http.debian.net/debian jessie-backports main contrib non-free deb-src http://http.debian.net/debian jessie-backports main contrib non-free deb http://opensource.nextthing.co/chip/debian/repo jessie main Looks pretty sane to me. Just standard debian stable repositories and one additional NextThing repository (probably for a custom kernel). Output of ‘ uname -r ‘ is 4.3.0-ntc . I have to admit that I am not entirely shure about ‘http.debian.net/debian' (jessie-backports). I think that I am going to change that line. Now let's install aptitude and additional programs (I like aptitude): apt-get update apt-get install aptitude Now you can install additional packages with aptitude (vim, mc, xterm, htop, screen, cmus, …) If you have any questions, suggestions, thoughts and comments please feel free to email me. License of this blog post: This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License .","tags":"Computer","title":"NextThing C.h.i.p."},{"url":"http://parobalth.github.io/gif-screencast","text":"Problem and Introduction I wanted to include some gif screencasts in my posts and started looking for a neat solution. I can live with a command line or gui solution as long as it works reasonable well and is in the Debian Jessie (stable) repositories. Interesting Links https://scottlinux.com/2011/07/31/create-animated-gif-in-linux-from-command-line/ http://askubuntu.com/questions/107726/how-to-create-animated-gif-images-of-a-screencast#107735 http://recordmydesktop.sourceforge.net/rug/app_a.php https://davidwalsh.name/convert-video-gif http://www.imagemagick.org/Usage/video/ http://www.linux.org/threads/animated-screen-capture-with-byzanz.7715/ Solutions From the links above I managed to extract two different solutions: byzanz - Debian package ‘byzanz' . This is the easiest and best solution I could find. Set the duration of the recording with the -d option. Replace ‘foo.gif' with your preferred filename: byzanz-record -d 20 foo.gif or record a video with ‘recordmydesktop' (see code example 0), ‘gtk-recordmydesktop' or use an existing video With ‘avconv' you can directly convert to gif (see code example 1) and skip step 3. Another aproach is to extract stillimages with ‘mplayer' (see code example 2) or with ‘avconv' (see code example 3). convert to ‘gif' with imagemagick (see code example 4) Code example 0 (record a video; replace foobar.ogv with your filename): recordmydesktop -o foobar.ogv Code example 1 (direct video to gif conversion; replace foobar.ogv with your filename): avconv -i foobar.ogv -pix_fmt rgb24 foobar.gif Code example 2 (extraction of still images; replace foobar.ogv with your filename): mplayer -ao null foobar.ogv -vo jpeg:outdir = output Code example 3 (extraction of still images; replace foobar.ogv with your filename): avconv -i foobar.ogv -r 15 output/image-%3d.png Code example 4 (convert stillimages to gif): convert output/* -layers Optimize output.gif This solution produces usable gifs with small filesizes. The still image extraction and conversion to gif takes a lot of computing. If you have any questions, suggestions, thoughts and comments please feel free to email me. License of this blog post: This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License .","tags":"Computer","title":"Gif screencast"},{"url":"http://parobalth.github.io/vim-fx","text":"Introduction Vim is my main editor. I love programms with vim key bindings. There are several firefox plugins with vim key bindings ( read ). I initially started with Vimperator then switched to Pentadactyl and it was great. Problem With the recent switch from iceweasel to firefox-esr in Debian stable (Jessie) Pentadactyl stopped working because all plugins need a valid mozilla signature. There is a rather long thread at Pentadactyls issue tracker with some explanations. Currently there are different options: Continue with pentadactyl: There is still an option to disable strict signature checks (read the section about unsigned Addons in firefox-esr). Use something else: I'm quite happy with VimFx although I was sceptic at first. (read the section \" Solution )\" Unsigned Addons in firefox-esr From: https://wiki.mozilla.org/Addons/Extension_Signing# FAQ - Use at your own risk! What are my options if I want to install unsigned extensions in Firefox? The Developer Edition and Nightly versions of Firefox will have a setting to disable signature enforcement. There will also be special unbranded versions of Release and Beta that will have this setting, so that add-on developers can work on their add-ons without having to sign every build. To disable signature checks, you will need to set the xpinstall.signatures.required preference to \"false\". type about:config into the URL bar in Firefox in the Search box type xpinstall.signatures.required double-click the preference, or right-click and selected \"Toggle\", to set it to false. Solution I started to look for alternatives and discovered the VimFX plugin: Even before Vimium there was Vimperator for Firefox. In my opinion, Vimperator has too many features and aggressively changes the default Firefox appearance and behavior. Vimium is exactly what I need in terms of added functionality, but for Chrome. That's why I decided to develop similar extension for Firefox. VimFx will be nice to your browser and to your habits. Promise. – Anton Khodakivskiy, VimFx's original author. Just install it via the firefox add-on menu. Press ? to to see a help page with all available commands. I had to relearn some key bindings: Action Pentadactyl VimFx Close Tab: d x Back: Ctrl+o H Scrolling feels smooth. Half page down (d) and half page up (u) are hassle free key bindings. I usually scroll a half page down so it is nice to have this command on the homerow. yy to copy the current url is a great shortcut. I think I am going to stick with VimFX - it is not Pentadayctyl but at least it is fast, not in your way and it does not alter the default Firefox appearance. If you have any questions, suggestions, thoughts and comments please feel free to email me. License of this blog post: This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License .","tags":"Computer","title":"VimFx instead of Pentadactyl"},{"url":"http://parobalth.github.io/debian-firefox-esr","text":"Firefox-esr During the latest update of the stable branch of Debian (Jessie) I noticed the selected package ‘firefox-esr'. After installing the update I got the following message: The iceweasel package was replaced with the firefox-esr package. Preferences under /etc/iceweasel/prefs will need to be copied manually to /etc/firefox-esr. Other customizations under /etc/iceweasel will need additional manual steps, through CCK2 or addons. — Mike Hommey glandium@debian.org Mon, 7 Mar 2016 07:45:02 +0900 Ok, this message took me by surprise. After using Debian and Iceweasel for several years I wondered what happened to the iceweasel package? A quick google search told me that the Debian project finally switched back to Firefox. Mike Hommey, maintainer of the Iceweasel package wrote about the change on his blog . Other interesting links on this topic: https://wiki.debian.org/Iceweasel https://lwn.net/Articles/676799/ https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=815006 If you have any questions, suggestions, thoughts and comments please feel free to email me. License of this blog post: This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License .","tags":"Computer","title":"Firefox-esr in Debian Jessie"},{"url":"http://parobalth.github.io/xterm-font","text":"Somewhere I read a recommendation for xterm a terminal emulator for the X window system. I tried it and was surprised that it looks so ugly. I like programs with sane and usable defaults. Maybe xterm has low profile defaults because it supports very old hardware. For a modern X window system some configuration is necessary. Screenshot of xterm with default settings In my opinion the default font size is way to small and the font looks anachronistic. I also dislike the white font on black background. Don't be afraid with some minor configuration improvements it's going to look great. On the pro side I instantly liked about xterm that it doesn't interfere with the shortcuts of other programs for example mc . For general configuration read the ArchWiki xterm article. When configuring my xterm setup I had to choose a terminal font. After some testing I chose Vera Sans Mono a few months ago and did not regret my decision. \" It is a TrueType font with full hinting instructions, which improve its rendering quality on low-resolution devices such as computer monitors. […] The Bitstream Vera Sans Mono typeface in particular is suitable for technical work, as it clearly distinguishes ‘l' (lowercase L) from ‘1' (one) and ‘I' (uppercase i), and ‘0' (zero) from ‘O' (uppercase o).\" — (Quoted from Wikipedia ) There was no need to install the font on GNU /Linux. It was already installed on my Debianbox. Copy the following lines to your ~/.Xresources file to use it as your xterm font with a reasonable font size. If you don't already have an .Xresources file just create it! URxvt.font: xft:Bitstream Vera Sans Mono:pixelsize = 15 XTerm*faceName: Bitstream Vera Sans Mono:pixelsize = 15 Screenshot of xterm with Vera Sans Mono font Much better than the default font. I prefer to use the great solarized color scheme instead of the default black and white. Screenshot of xterm with solarized color scheme Additional useful links: https://lukas.zapletalovi.com/2013/07/hidden-gems-of-xterm.html https://unix4lyfe.org/xterm/ http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/ Detailed information and Download for Windows: http://www.gnome.org/fonts/ How to change the font in gvim (gui): http://vim.wikia.com/wiki/Change_font If you have any questions, suggestions, thoughts and comments please feel free to email me. License of this blog post: This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License .","tags":"Computer","title":"Xterm - sane defaults?"},{"url":"http://parobalth.github.io/vim-run-line","text":"A few days ago I wrote a post how to save history commands to a file. I tinkered with my notes file and wondered how to run the current line in bash. I found multiple solutions but all replaced the current line with the output of the command. Although this can be useful it did not help me. It frustrated me that I could not find a proper solution. I don't consider myself a vim beginner anymore and somehow I felt stupid. From vimtutor I remebered ! to run external commands. I even looked it up in vimtutor but I could only find :r !date . The following example runs the current line and replaces it with the output: :. !bash Note that the current line is represented by a dot. You can declare a range with 1,5 (line 1 to 5) or .,$ (current line to end of file). You can also use a line number (e.g. \":5 !bash\"). Some screenshots for clarification where I'm running line number 1: Hit Enter : Line number 1 is replaced by the output of the fortune command. Solution :.w !bash This stackoverflow-link finally offered the above solution. Again some screenshots for clarification: Hit Enter to execute chosen line: Hit Enter to get back to your unmodified vim buffer: Note that you can also use !sh instead of !bash to type less and that all examples also work in visual mode. Vim help Read the vim help: :help w_c Copyheart: ♡ 2016 by Parobalth. Copying is an act of love, please share.","tags":"Computer","title":"Vim: Run current line"},{"url":"http://parobalth.github.io/ncmd","text":"Some time ago I started to append neat commands I don't want to forget to a file in my home directory (e.g echo 'foo' >> ~/commands.txt ). So I had to navigate to a previous command with CTRL-p , add \"echo\", wrap it in singlequotes and add the path to my notes file. Quite a long process to append one command to a file. I already knew that !! repeats the last command but not how to get it into a file instead of being executed. Actually it works quite simple with echo \"!!\" >> ~/commands.txt (which appends your last command to the file ‘commands.txt' in your home directory). I still wanted an easier solution so I created the following bash alias to save me some typing and to be less distraction from the actual task I'm trying to get done: alias ncmd = 'echo $1 >> ~/commands.md' I added the above line to my \"~/.bash_aliases\" file and ran . .bash_aliases to source it. Then I started to test the above solution and noticed issues with complex arguments and wildcards. I also read that it's not recommended to use variables in bash aliases. So I searched for a proper solution and learned quite a lot about bash syntax and how to define functions. Solution My final solution is the following function in my .bashrc file: nn () { echo \" $@ \" >> ~/commands.txt } The power of history expansion Now you can use all the power of history expansion as an argument to the function nn . For example nn \"!!\" appends the last command, nn \"!-5\" appends the 5th last, nn \"!100\" the 100th command in your history file, nn \"!ssh\" appends the first command with ssh in it. Read man history for further examples. Double quotes are mandatory. You can also add explanations like nn \"Commands to copy foo to bar:\" and then append the appropriate commands. Screenshot: fc - fix command fc is a little programm to list or edit and re-execute commands from the history list. Read help fc Copyheart: ♡ 2016 by Parobalth. Copying is an act of love, please share.","tags":"Computer","title":"Note your last command"},{"url":"http://parobalth.github.io/test-post","text":"Using the holidays for some testing! Happy Holidays to all of you! def foobar(): 1 print ( 'Hello World' ) More code: To follow the path Copyheart: ♡ 2015 by Parobalth. Copying is an act of love, please share.","tags":"Test","title":"Holiday Testing"},{"url":"http://parobalth.github.io/christmas-songs","text":"Christmas is coming! It's already December. To bring you into christmas mood I'm sharing links to some of my favorite christmas songs: \" Have Yourself a Merry Little Christmas\" by Frank Sinatra: https://www.youtube.com/watch?v=nZ6yQgBvuoI \" White Christmas\" Bing Crosby & Martha Mears: https://www.youtube.com/watch?v=SvfhoWIPoVw \" Sleigh Ride\" John Konesky: https://www.youtube.com/watch?v=3dwxMh4gXcM","tags":"Life","title":"Christmas Songs"},{"url":"http://parobalth.github.io/todays-webtip-blogjoemcnallycom","text":"Today I'm sharing a link to another photography blog I read on a regular basis: http://blog.joemcnally.com","tags":"Photography","title":"Today's webtip - blog.joemcnally.com"},{"url":"http://parobalth.github.io/todays-webtip-bythomcom","text":"This is my first post in the Photography category. Today I'm sharing a link to a photography blog I read on a regular basis: http://www.bythom.com/ I can highly recommend it!","tags":"Photography","title":"Today's webtip - bythom.com"},{"url":"http://parobalth.github.io/soupio","text":"Recently I started to use soup.io. You can access my microblog at http://parobalth.soup.io/","tags":"Computer","title":"Soup.io"},{"url":"http://parobalth.github.io/vim-system-clipboard","text":"I finally found a solution to my vim issues with the system clipboard. I just had to install vim-gtk to make \"*p and \"+p work (Debian Wheezy). Stackoverflow post: http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard","tags":"Computer","title":"Vim - system clipboard"},{"url":"http://parobalth.github.io/first-post","text":"This is the first post. I managed to set up a pelican powered blog with github user pages. There is still a lot of testing and learning necessary! Useful links and tutorials: http://mathamy.com/migrating-to-github-pages-using-pelican.html http://nafiulis.me/making-a-static-blog-with-pelican.html https://pages.github.com/ http://www.vcheng.org/2014/02/22/migrating-from-wordpress-to-pelican/ Best place to view pelican themes: http://pelicanthemes.com","tags":"Computer","title":"First Post"},{"url":"http://parobalth.github.io/hello_world","text":"Hello World from Pelican! I'm testing Pelican.","tags":"Test","title":"Hello_World"}]}