{"pages":[{"url":"http://parobalth.github.io/xterm-font","text":"Somewhere I read a recommendation for xterm a terminal emulator for the X window system. I tried it and was surprised that it looks so ugly. I like programs with sane and usable defaults. Maybe xterm has low profile defaults because it supports very old hardware. For a modern X window system some configuration is necessary. Screenshot of xterm with default settings: In my opinion the default font size is way to small and the font looks anachronistic. I also dislike the white font on black background. Don't be afraid with some minor configuration improvements it's going to look great. On the pro side I instantly liked about xterm that it doesn't interfere with the shortcuts of other programs for example mc . For general configuration read the ArchWiki xterm article. When configuring my xterm setup I had to choose a terminal font. After some testing I chose Vera Mono sans a few months ago and did not regret my decision. \" It is a TrueType font with full hinting instructions, which improve its rendering quality on low-resolution devices such as computer monitors. […] The Bitstream Vera Sans Mono typeface in particular is suitable for technical work, as it clearly distinguishes ‘l' (lowercase L) from ‘1' (one) and ‘I' (uppercase i), and ‘0' (zero) from ‘O' (uppercase o).\" — (Quoted from Wikipedia ) There was no need to install the font on GNU /Linux. It was already installed on my Debianbox. Copy the following lines to your ~/.Xresources file to use it as your xterm font with a reasonable font size. If you don't already have an .Xresources file just create it! URxvt.font: xft:Bitstream Vera Sans Mono:pixelsize = 15 XTerm*faceName: Bitstream Vera Sans Mono:pixelsize = 15 Screenshot of xterm with Vera Mono sans font: Much better than the default font. I prefer to use the great solarized color scheme instead of the default black and white. Screenshot of xterm with solarized color scheme : Additional useful links: https://lukas.zapletalovi.com/2013/07/hidden-gems-of-xterm.html https://unix4lyfe.org/xterm/ http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/ Detailed information and Download for Windows: http://www.gnome.org/fonts/ How to change the font in gvim (gui): http://vim.wikia.com/wiki/Change_font If you have any questions, suggestions, thoughts and comments please feel free to email me. License of this bog post: This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License .","tags":"Computer","title":"Xterm - sane defaults"},{"url":"http://parobalth.github.io/vim-run-line","text":"A few days ago I wrote a post how to save history commands to a file. I tinkered with my notes file and wondered how to run the current line in bash. I found multiple solutions but all replaced the current line with the output of the command. Although this can be useful it did not help me. It frustrated me that I could not find a proper solution. I don't consider myself a vim beginner anymore and somehow I felt stupid. From vimtutor I remebered ! to run external commands. I even looked it up in vimtutor but I could only find :r !date . The following example runs the current line and replaces it with the output: :. !bash Note that the current line is represented by a dot. You can declare a range with 1,5 (line 1 to 5) or .,$ (current line to end of file). You can also use a line number (e.g. \":5 !bash\"). Some screenshots for clarification where I'm running line number 1: Hit Enter : Line number 1 is replaced by the output of the fortune command. Solution :.w !bash This stackoverflow-link finally offered the above solution. Again some screenshots for clarification: Hit Enter to execute chosen line: Hit Enter to get back to your unmodified vim buffer: Note that you can also use !sh instead of !bash to type less and that all examples also work in visual mode. Vim help Read the vim help: :help w_c Copyheart: ♡ 2016 by Parobalth. Copying is an act of love, please share.","tags":"Computer","title":"Vim: Run current line"},{"url":"http://parobalth.github.io/ncmd","text":"Some time ago I started to append neat commands I don't want to forget to a file in my home directory (e.g echo 'foo' >> ~/commands.txt ). So I had to navigate to a previous command with CTRL-p , add \"echo\", wrap it in singlequotes and add the path to my notes file. Quite a long process to append one command to a file. I already knew that !! repeats the last command but not how to get it into a file instead of being executed. Actually it works quite simple with echo \"!!\" >> ~/commands.txt (which appends your last command to the file ‘commands.txt' in your home directory). I still wanted an easier solution so I created the following bash alias to save me some typing and to be less distraction from the actual task I'm trying to get done: alias ncmd = 'echo $1 >> ~/commands.md' I added the above line to my \"~/.bash_aliases\" file and ran . .bash_aliases to source it. Then I started to test the above solution and noticed issues with complex arguments and wildcards. I also read that it's not recommended to use variables in bash aliases. So I searched for a proper solution and learned quite a lot about bash syntax and how to define functions. Solution My final solution is the following function in my .bashrc file: nn () { echo \" $@ \" >> ~/commands.txt } The power of history expansion Now you can use all the power of history expansion as an argument to the function nn . For example nn \"!!\" appends the last command, nn \"!-5\" appends the 5th last, nn \"!100\" the 100th command in your history file, nn \"!ssh\" appends the first command with ssh in it. Read man history for further examples. Double quotes are mandatory. You can also add explanations like nn \"Commands to copy foo to bar:\" and then append the appropriate commands. Screenshot: fc - fix command fc is a little programm to list or edit and re-execute commands from the history list. Read help fc Copyheart: ♡ 2016 by Parobalth. Copying is an act of love, please share.","tags":"Computer","title":"Note your last command"},{"url":"http://parobalth.github.io/test-post","text":"Using the holidays for some testing! Happy Holidays to all of you! def foobar(): 1 print ( 'Hello World' ) More code: To follow the path Copyheart: ♡ 2015 by Parobalth. Copying is an act of love, please share.","tags":"Test","title":"Holiday Testing"},{"url":"http://parobalth.github.io/christmas-songs","text":"Christmas is coming! It's already December. To bring you into christmas mood I'm sharing links to some of my favorite christmas songs: \" Have Yourself a Merry Little Christmas\" by Frank Sinatra: https://www.youtube.com/watch?v=nZ6yQgBvuoI \" White Christmas\" Bing Crosby & Martha Mears: https://www.youtube.com/watch?v=SvfhoWIPoVw \" Sleigh Ride\" John Konesky: https://www.youtube.com/watch?v=3dwxMh4gXcM","tags":"Life","title":"Christmas Songs"},{"url":"http://parobalth.github.io/todays-webtip-blogjoemcnallycom","text":"Today I'm sharing a link to another photography blog I read on a regular basis: http://blog.joemcnally.com","tags":"Photography","title":"Today's webtip - blog.joemcnally.com"},{"url":"http://parobalth.github.io/todays-webtip-bythomcom","text":"This is my first post in the Photography category. Today I'm sharing a link to a photography blog I read on a regular basis: http://www.bythom.com/ I can highly recommend it!","tags":"Photography","title":"Today's webtip - bythom.com"},{"url":"http://parobalth.github.io/soupio","text":"Recently I started to use soup.io. You can access my microblog at http://parobalth.soup.io/","tags":"Computer","title":"Soup.io"},{"url":"http://parobalth.github.io/vim-system-clipboard","text":"I finally found a solution to my vim issues with the system clipboard. I just had to install vim-gtk to make \"*p and \"+p work (Debian Wheezy). Stackoverflow post: http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard","tags":"Computer","title":"Vim - system clipboard"},{"url":"http://parobalth.github.io/first-post","text":"This is the first post. I managed to set up a pelican powered blog with github user pages. There is still a lot of testing and learning necessary! Useful links and tutorials: http://mathamy.com/migrating-to-github-pages-using-pelican.html http://nafiulis.me/making-a-static-blog-with-pelican.html https://pages.github.com/ http://www.vcheng.org/2014/02/22/migrating-from-wordpress-to-pelican/ Best place to view pelican themes: http://pelicanthemes.com","tags":"Computer","title":"First Post"},{"url":"http://parobalth.github.io/hello_world","text":"Hello World from Pelican! I'm testing Pelican.","tags":"Test","title":"Hello_World"}]}