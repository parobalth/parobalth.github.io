<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Parobalth</title><link href="http://parobalth.github.io/" rel="alternate"></link><link href="http://parobalth.github.io/feeds/all.atom.xml" rel="self"></link><id>http://parobalth.github.io/</id><updated>2016-07-30T00:00:00+02:00</updated><entry><title>NextThing C.h.i.p.</title><link href="http://parobalth.github.io/chip-intro" rel="alternate"></link><updated>2016-07-30T00:00:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2016-07-29:chip-intro</id><summary type="html">&lt;p&gt;&lt;img alt="chip_small" src="./images/Chip1small.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Warning &amp;#8212; work in progress: This is a quick&amp;amp;dirty post about the first steps to connect NextThing C.h.i.p via &lt;span class="caps"&gt;USB&lt;/span&gt; serial on a Debian Jessie machine. Consider it as a first draft &amp;#8212; I am going to modify this post in the next few days and correct&amp;nbsp;typos.&lt;/p&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I recieved my NextThing C.h.i.p. this week!
It is a 9$ computer and comes already flashed with the C.h.i.p. &lt;span class="caps"&gt;OS&lt;/span&gt; based on Debian.
I took some notes during my first steps with&amp;nbsp;chip:&lt;/p&gt;
&lt;p&gt;This is the &lt;a href="http://docs.getchip.com/chip.html#introduction"&gt;official Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="headless-via-usb"&gt;Headless via &lt;span class="caps"&gt;USB&lt;/span&gt;&lt;a class="headerlink" href="#headless-via-usb" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I used &lt;a href="http://docs.getchip.com/chip.html#headless-chip"&gt;this part&lt;/a&gt; of the official documentation as a starting point.
I like headless ssh-connections but you can&amp;#8217;t reach your chip because wifi is not yet configured with your network.
I used a &lt;span class="caps"&gt;USB&lt;/span&gt; serial connection. Note that I use &lt;em&gt;Debian Jessie&lt;/em&gt; (stable).&lt;br /&gt;
Connect your Chip with a standard &lt;span class="caps"&gt;USB&lt;/span&gt;-to-usb-micro-cable to the usb-port of your Computer/Laptop and&amp;nbsp;run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dmesg -w
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output will be similar&amp;nbsp;to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;usb 1-2: New USB device found, idVendor=0525, idProduct=a4a7
usb 1-2: New USB device strings: Mfr=1, Product=2, SerialNumber=0
usb 1-2: Product: Gadget Serial v2.4
usb 1-2: Manufacturer: Linux 4.3.0-ntc with musb-hdrc
cdc_acm 1-2:2.0: This device cannot do calls on its own. It is not a modem.
cdc_acm 1-2:2.0: ttyACM0: USB ACM device
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So your Chip is recognized as &amp;#8216;&lt;em&gt;ttyACM0&lt;/em&gt;&amp;#8216;.
I had some permission problems and had to connect&amp;nbsp;with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo screen /dev/ttyACM0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Login as &lt;code&gt;root&lt;/code&gt; with password &lt;code&gt;chip&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;set up a wifi connection with&amp;nbsp;nmtui:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nmtui
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can ssh into chip but you may want to change the root password (&lt;code&gt;passwd&lt;/code&gt;) first, create a normal user (&lt;code&gt;adduser foo&lt;/code&gt;) and forbid root login via ssh (change settings in /etc/ssh/sshd_config). Add your user &amp;#8216;foo&amp;#8217; to the sudo group with &amp;#8216;&lt;code&gt;adduser foo sudo&lt;/code&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now you can ssh to your chip with (replace &amp;#8216;foo&amp;#8217; with your username and &amp;#8216;xxx.xxx.x.x&amp;#8217; with the &lt;span class="caps"&gt;IP&lt;/span&gt; adress of&amp;nbsp;chip):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh foo@xxx.xxx.x.x
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let us have a look at the&amp;nbsp;sources.list:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://ftp.us.debian.org/debian/&lt;/span&gt; &lt;span class="kp"&gt;jessie&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://ftp.us.debian.org/debian/&lt;/span&gt; &lt;span class="kp"&gt;jessie&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;

&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://security.debian.org/&lt;/span&gt; &lt;span class="kp"&gt;jessie/updates&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://security.debian.org/&lt;/span&gt; &lt;span class="kp"&gt;jessie/updates&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;

&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://http.debian.net/debian&lt;/span&gt; &lt;span class="kp"&gt;jessie-backports&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://http.debian.net/debian&lt;/span&gt; &lt;span class="kp"&gt;jessie-backports&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;

&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://opensource.nextthing.co/chip/debian/repo&lt;/span&gt; &lt;span class="kp"&gt;jessie&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Looks pretty sane to me. Just standard debian stable repositories and one additional NextThing repository (probably for a custom kernel). Output of &amp;#8216;&lt;code&gt;uname -r&lt;/code&gt;&lt;span class="quo"&gt;&amp;#8216;&lt;/span&gt; is &lt;em&gt;4.3.0-ntc&lt;/em&gt;. I have to admit that I am not entirely shure about &amp;#8216;http.debian.net/debian&amp;#8217; (jessie-backports). I think that I am going to change that&amp;nbsp;line.&lt;/p&gt;
&lt;p&gt;Now let&amp;#8217;s install aptitude and additional programs (I like&amp;nbsp;aptitude):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;apt-get update
apt-get install aptitude
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can install additional packages with aptitude (vim, mc, xterm, htop, screen, cmus,&amp;nbsp;&amp;#8230;)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;If you have any questions, suggestions, thoughts and comments please feel free to email&amp;nbsp;me.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;License of this blog&amp;nbsp;post:&lt;/p&gt;
&lt;p&gt;&lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;&lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary><category term="c.h.i.p."></category><category term="debian"></category><category term="nextthing"></category><category term="usb-serial"></category><category term="ssh"></category><category term="draft"></category></entry><entry><title>Gif screencast</title><link href="http://parobalth.github.io/gif-screencast" rel="alternate"></link><updated>2016-07-26T00:00:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2016-07-26:gif-screencast</id><summary type="html">&lt;h2 id="problem-and-introduction"&gt;Problem and Introduction&lt;a class="headerlink" href="#problem-and-introduction" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I wanted to include some gif screencasts in my posts and started looking for a neat solution. I can live with a command line or gui solution as long as it works reasonable well and is in the Debian Jessie (stable)&amp;nbsp;repositories.&lt;/p&gt;
&lt;h2 id="interesting-links"&gt;Interesting Links&lt;a class="headerlink" href="#interesting-links" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scottlinux.com/2011/07/31/create-animated-gif-in-linux-from-command-line/"&gt;https://scottlinux.com/2011/07/31/create-animated-gif-in-linux-from-command-line/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/107726/how-to-create-animated-gif-images-of-a-screencast#107735"&gt;http://askubuntu.com/questions/107726/how-to-create-animated-gif-images-of-a-screencast#107735&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://recordmydesktop.sourceforge.net/rug/app_a.php"&gt;http://recordmydesktop.sourceforge.net/rug/app_a.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://davidwalsh.name/convert-video-gif"&gt;https://davidwalsh.name/convert-video-gif&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.imagemagick.org/Usage/video/"&gt;http://www.imagemagick.org/Usage/video/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.linux.org/threads/animated-screen-capture-with-byzanz.7715/"&gt;http://www.linux.org/threads/animated-screen-capture-with-byzanz.7715/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="solutions"&gt;Solutions&lt;a class="headerlink" href="#solutions" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;From the links above I managed to extract two different solutions:
&lt;code&gt;byzanz&lt;/code&gt; - &lt;a href="https://packages.debian.org/jessie/byzanz"&gt;Debian package &amp;#8216;byzanz&amp;#8217;&lt;/a&gt;. This is the easiest and best solution I could find. Set the duration of the recording with the &lt;code&gt;-d&lt;/code&gt; option. Replace &amp;#8216;foo.gif&amp;#8217; with your preferred&amp;nbsp;filename:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;byzanz-record -d &lt;span class="m"&gt;20&lt;/span&gt; foo.gif
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;record a video with &amp;#8216;recordmydesktop&amp;#8217; (see code example 0), &amp;#8216;gtk-recordmydesktop&amp;#8217; or use an existing&amp;nbsp;video&lt;/li&gt;
&lt;li&gt;With &amp;#8216;avconv&amp;#8217; you can directly convert to gif (see code example 1) and skip step 3. Another aproach is to extract stillimages with &amp;#8216;mplayer&amp;#8217; (see code example 2) or with &amp;#8216;avconv&amp;#8217; (see code example&amp;nbsp;3).  &lt;/li&gt;
&lt;li&gt;convert to &amp;#8216;gif&amp;#8217; with imagemagick (see code example&amp;nbsp;4)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Code example 0 (record a video; replace foobar.ogv with your&amp;nbsp;filename):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;recordmydesktop -o foobar.ogv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Code example 1 (direct video to gif conversion; replace foobar.ogv with your&amp;nbsp;filename):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;avconv -i foobar.ogv -pix_fmt rgb24 foobar.gif
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Code example 2 (extraction of still images; replace foobar.ogv with your&amp;nbsp;filename):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mplayer -ao null foobar.ogv -vo jpeg:outdir&lt;span class="o"&gt;=&lt;/span&gt;output
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Code example 3 (extraction of still images; replace foobar.ogv with your&amp;nbsp;filename):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;avconv -i foobar.ogv -r &lt;span class="m"&gt;15&lt;/span&gt; output/image-%3d.png
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Code example 4 (convert stillimages to&amp;nbsp;gif):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;convert output/* -layers Optimize output.gif
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This solution produces usable gifs with small filesizes. The still image extraction and conversion to gif takes a lot of&amp;nbsp;computing.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;If you have any questions, suggestions, thoughts and comments please feel free to email&amp;nbsp;me.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;License of this blog&amp;nbsp;post:&lt;/p&gt;
&lt;p&gt;&lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;&lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary><category term="gif"></category><category term="debian"></category><category term="screencast"></category></entry><entry><title>VimFx instead of Pentadactyl</title><link href="http://parobalth.github.io/vim-fx" rel="alternate"></link><updated>2016-07-17T00:00:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2016-07-17:vim-fx</id><summary type="html">&lt;h2 id="introduction"&gt;Introduction&lt;a class="headerlink" href="#introduction" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Vim is my main editor. I love programms with vim key bindings. There are several firefox plugins with vim key bindings (&lt;a href="http://vim.wikia.com/wiki/Vim_key_bindings_for_web_browsers"&gt;read&lt;/a&gt;). I initially started with Vimperator then switched to &lt;a href="http://5digits.org/pentadactyl/"&gt;Pentadactyl&lt;/a&gt; and it was&amp;nbsp;great.&lt;/p&gt;
&lt;h2 id="problem"&gt;Problem&lt;a class="headerlink" href="#problem" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the recent &lt;a href="debian-firefox-esr.html"&gt;switch from iceweasel to firefox-esr&lt;/a&gt; in Debian stable (Jessie) Pentadactyl stopped working because all plugins need a valid mozilla signature. There is a rather long &lt;a href="https://github.com/5digits/dactyl/issues/79"&gt;thread&lt;/a&gt; at Pentadactyls issue tracker with some&amp;nbsp;explanations.  &lt;/p&gt;
&lt;p&gt;Currently there are different&amp;nbsp;options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Continue with pentadactyl: There is still an option to disable strict signature checks (read the section about unsigned Addons in&amp;nbsp;firefox-esr). &lt;/li&gt;
&lt;li&gt;Use something else: I&amp;#8217;m quite happy with VimFx although I was sceptic at first. (read the section &amp;#8220;&lt;a href="#solution"&gt;Solution&lt;/a&gt;)&amp;#8221;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="unsigned-addons-in-firefox-esr"&gt;Unsigned Addons in firefox-esr&lt;a class="headerlink" href="#unsigned-addons-in-firefox-esr" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;From: &lt;a href="https://wiki.mozilla.org/Addons/Extension_Signing#FAQ"&gt;https://wiki.mozilla.org/Addons/Extension_Signing#&lt;span class="caps"&gt;FAQ&lt;/span&gt;&lt;/a&gt; - Use at your own&amp;nbsp;risk!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What are my options if I want to install unsigned extensions in&amp;nbsp;Firefox?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Developer Edition and Nightly versions of Firefox will have a setting to disable signature enforcement. There will also be special unbranded versions of Release and Beta that will have this setting, so that add-on developers can work on their add-ons without having to sign every build. To disable signature checks, you will need to set the xpinstall.signatures.required preference to&amp;nbsp;&amp;#8220;false&amp;#8221;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;type &lt;em&gt;about:config&lt;/em&gt; into the &lt;span class="caps"&gt;URL&lt;/span&gt; bar in&amp;nbsp;Firefox&lt;/li&gt;
&lt;li&gt;in the Search box type &lt;em&gt;xpinstall.signatures.required&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;double-click the preference, or right-click and selected &amp;#8220;Toggle&amp;#8221;, to set it to&amp;nbsp;false.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id="solution"&gt;Solution&lt;a class="headerlink" href="#solution" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I started to look for alternatives and discovered the &lt;a href="https://github.com/akhodakivskiy/VimFx"&gt;VimFX&lt;/a&gt;&amp;nbsp;plugin: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even before Vimium there was Vimperator for Firefox. In my opinion, Vimperator has too many features and aggressively changes the default Firefox appearance and behavior. Vimium is exactly what I need in terms of added functionality, but for Chrome. That’s why I decided to develop similar extension for&amp;nbsp;Firefox.&lt;/p&gt;
&lt;p&gt;VimFx will be nice to your browser and to your habits.&amp;nbsp;Promise.&lt;/p&gt;
&lt;p&gt;– Anton Khodakivskiy, VimFx’s original&amp;nbsp;author.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just install it via the firefox add-on menu.
Press &lt;code&gt;?&lt;/code&gt; to to see a help page with all available commands.&lt;br /&gt;
I had to relearn some key&amp;nbsp;bindings:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Pentadactyl&lt;/th&gt;
&lt;th&gt;VimFx&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Close Tab:&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Back:&lt;/td&gt;
&lt;td&gt;Ctrl+o&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Scrolling feels smooth. Half page down (d) and half page up (u) are hassle free key bindings. I usually scroll a half page down so it is nice to have this command on the homerow. &lt;code&gt;yy&lt;/code&gt; to copy the current url is a great&amp;nbsp;shortcut.&lt;/p&gt;
&lt;p&gt;I think I am going to stick with VimFX - it is not Pentadayctyl but at least it is fast, not in your way and it does not alter the default Firefox&amp;nbsp;appearance.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;If you have any questions, suggestions, thoughts and comments please feel free to email&amp;nbsp;me.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;License of this blog&amp;nbsp;post:&lt;/p&gt;
&lt;p&gt;&lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;&lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary><category term="key-bindings"></category><category term="pentadactyl"></category><category term="vim"></category><category term="vim-fx"></category><category term="firefox"></category></entry><entry><title>Firefox-esr in Debian Jessie</title><link href="http://parobalth.github.io/debian-firefox-esr" rel="alternate"></link><updated>2016-06-18T00:00:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2016-06-18:debian-firefox-esr</id><summary type="html">&lt;h2 id="firefox-esr"&gt;Firefox-esr&lt;a class="headerlink" href="#firefox-esr" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;During the latest update of the stable branch of Debian (Jessie) I noticed the selected package &amp;#8216;firefox-esr&amp;#8217;. After installing the update I got the following&amp;nbsp;message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The iceweasel package was replaced with the firefox-esr&amp;nbsp;package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Preferences under /etc/iceweasel/prefs will need to be copied manually
   to&amp;nbsp;/etc/firefox-esr.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Other customizations under /etc/iceweasel will need additional manual
   steps, through &lt;span class="caps"&gt;CCK2&lt;/span&gt; or&amp;nbsp;addons.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#8212; Mike Hommey &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#103;&amp;#108;&amp;#97;&amp;#110;&amp;#100;&amp;#105;&amp;#117;&amp;#109;&amp;#64;&amp;#100;&amp;#101;&amp;#98;&amp;#105;&amp;#97;&amp;#110;&amp;#46;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#103;&amp;#108;&amp;#97;&amp;#110;&amp;#100;&amp;#105;&amp;#117;&amp;#109;&amp;#64;&amp;#100;&amp;#101;&amp;#98;&amp;#105;&amp;#97;&amp;#110;&amp;#46;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt;  Mon, 7 Mar 2016 07:45:02&amp;nbsp;+0900&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ok, this message took me by surprise. After using Debian and Iceweasel for several years I wondered what happened to the iceweasel&amp;nbsp;package?&lt;/p&gt;
&lt;p&gt;A quick google search told me that the Debian project finally switched back to Firefox.
Mike Hommey, maintainer of the Iceweasel package wrote about the change on his &lt;a href="https://glandium.org/blog/?p=3622"&gt;blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other interesting links on this&amp;nbsp;topic: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.debian.org/Iceweasel"&gt;https://wiki.debian.org/Iceweasel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/Articles/676799/"&gt;https://lwn.net/Articles/676799/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=815006"&gt;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=815006&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;If you have any questions, suggestions, thoughts and comments please feel free to email&amp;nbsp;me.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;License of this blog&amp;nbsp;post:&lt;/p&gt;
&lt;p&gt;&lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;&lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary><category term="debian"></category><category term="iceweasel"></category><category term="firefox-esr"></category></entry><entry><title>Xterm - sane defaults?</title><link href="http://parobalth.github.io/xterm-font" rel="alternate"></link><updated>2016-04-03T00:00:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2016-04-02:xterm-font</id><summary type="html">&lt;p&gt;Somewhere I read a recommendation for &lt;a href="http://invisible-island.net/xterm/"&gt;xterm&lt;/a&gt; a terminal emulator for the X window system. I tried it and was surprised that it looks so ugly. I like programs with sane and usable defaults. Maybe xterm has low profile defaults because it supports very old hardware. For a modern X window system some configuration is&amp;nbsp;necessary. &lt;/p&gt;
&lt;p&gt;&lt;img alt="xterm-default" src="./images/xterm-default.png" /&gt;
Screenshot of xterm with default&amp;nbsp;settings&lt;/p&gt;
&lt;p&gt;In my opinion the default font size is way to small and the font looks anachronistic. I also dislike the white font on black background. Don&amp;#8217;t be afraid with some minor configuration improvements it&amp;#8217;s going to look great.
On the pro side I instantly liked about xterm that it doesn&amp;#8217;t interfere with the shortcuts of other programs for example &lt;a href="https://www.midnight-commander.org/"&gt;mc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For general configuration read the &lt;a href="https://wiki.archlinux.org/index.php/Xterm"&gt;ArchWiki&lt;/a&gt; xterm article. When configuring my xterm setup I had to choose a terminal font. After some testing I chose &lt;em&gt;Vera Sans Mono&lt;/em&gt; a few months ago and did not regret my&amp;nbsp;decision.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;It is a TrueType font with full hinting instructions, which improve its rendering quality on low-resolution devices such as computer monitors. [&amp;#8230;]
The Bitstream Vera Sans Mono typeface in particular is suitable for technical work, as it clearly distinguishes &amp;#8216;l&amp;#8217; (lowercase L) from &amp;#8216;1&amp;#8217; (one) and &amp;#8216;I&amp;#8217; (uppercase i), and &amp;#8216;0&amp;#8217; (zero) from &amp;#8216;O&amp;#8217; (uppercase o).&amp;#8221; &amp;#8212; (Quoted from &lt;a href="https://en.wikipedia.org/wiki/Bitstream_Vera"&gt;Wikipedia&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There was no need to install the font on &lt;span class="caps"&gt;GNU&lt;/span&gt;/Linux. It was already installed on my Debianbox.
Copy the following lines to your ~/.Xresources file to use it as your xterm font with a reasonable font size. If you don&amp;#8217;t already have an .Xresources file just create&amp;nbsp;it!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;URxvt.font: xft:Bitstream Vera Sans Mono:pixelsize&lt;span class="o"&gt;=&lt;/span&gt;15
XTerm*faceName: Bitstream Vera Sans Mono:pixelsize&lt;span class="o"&gt;=&lt;/span&gt;15
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="vera-mono" src="./images/vera-capture.png" /&gt;
Screenshot of xterm with Vera Sans Mono&amp;nbsp;font&lt;/p&gt;
&lt;p&gt;Much better than the default font. I prefer to use the great solarized color scheme instead of the default black and&amp;nbsp;white.&lt;/p&gt;
&lt;p&gt;&lt;img alt="solarized" src="./images/sol-capture.png" /&gt;
Screenshot of xterm with &lt;a href="http://ethanschoonover.com/solarized"&gt;solarized color&amp;nbsp;scheme&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="additional-useful-links"&gt;Additional useful links:&lt;a class="headerlink" href="#additional-useful-links" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lukas.zapletalovi.com/2013/07/hidden-gems-of-xterm.html"&gt;https://lukas.zapletalovi.com/2013/07/hidden-gems-of-xterm.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unix4lyfe.org/xterm/"&gt;https://unix4lyfe.org/xterm/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/"&gt;http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="detailed-information-and-download-for-windows"&gt;Detailed information and Download for Windows:&lt;a class="headerlink" href="#detailed-information-and-download-for-windows" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.gnome.org/fonts/"&gt;http://www.gnome.org/fonts/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="how-to-change-the-font-in-gvim-gui"&gt;How to change the font in gvim (gui):&lt;a class="headerlink" href="#how-to-change-the-font-in-gvim-gui" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://vim.wikia.com/wiki/Change_font"&gt;http://vim.wikia.com/wiki/Change_font&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;If you have any questions, suggestions, thoughts and comments please feel free to email&amp;nbsp;me.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;License of this blog&amp;nbsp;post:&lt;/p&gt;
&lt;p&gt;&lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;&lt;img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt;</summary><category term="bash"></category><category term="command-line"></category><category term="xterm"></category><category term="font"></category><category term="terminal"></category></entry><entry><title>Vim: Run current line</title><link href="http://parobalth.github.io/vim-run-line" rel="alternate"></link><updated>2016-03-06T00:00:00+01:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2016-03-06:vim-run-line</id><summary type="html">&lt;p&gt;A few days ago I wrote a post how to save history commands to a file. I tinkered with my notes file and wondered how to run the current line in bash. I found multiple solutions but all replaced the current line with the output of the command. Although this can be useful it did not help me. It frustrated me that I could not find a proper solution. I don&amp;#8217;t consider myself a vim beginner anymore and somehow I felt stupid. From vimtutor I remebered &lt;code&gt;!&lt;/code&gt; to run external commands. I even looked it up in vimtutor but I could only find &lt;code&gt;:r !date&lt;/code&gt;. 
The following example runs the current line and replaces it with the&amp;nbsp;output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:. !bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the current line is represented by a dot. You can declare a range with &lt;code&gt;1,5&lt;/code&gt; (line 1 to 5) or &lt;code&gt;.,$&lt;/code&gt; (current line to end of file). You can also use a line number (e.g. &amp;#8220;:5&amp;nbsp;!bash&amp;#8221;). &lt;/p&gt;
&lt;p&gt;Some screenshots for clarification where I&amp;#8217;m running line number&amp;nbsp;1:&lt;/p&gt;
&lt;p&gt;&lt;img alt="scr1" src="./images/vimscr1.png" /&gt;
Hit &lt;code&gt;Enter&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="scr2" src="./images/vimscr2.png" /&gt;
Line number 1 is replaced by the output of the fortune&amp;nbsp;command.&lt;/p&gt;
&lt;h2 id="solution"&gt;Solution&lt;a class="headerlink" href="#solution" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:.w !bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This &lt;a href="http://stackoverflow.com/questions/7867356/piping-buffer-to-external-command-in-vim"&gt;stackoverflow-link&lt;/a&gt; finally offered the above&amp;nbsp;solution. &lt;/p&gt;
&lt;p&gt;Again some screenshots for&amp;nbsp;clarification:&lt;/p&gt;
&lt;p&gt;&lt;img alt="scr3" src="./images/vimscr3.png" /&gt;
Hit &lt;code&gt;Enter&lt;/code&gt; to execute chosen&amp;nbsp;line:&lt;/p&gt;
&lt;p&gt;&lt;img alt="scr4" src="./images/vimscr4.png" /&gt;
Hit &lt;code&gt;Enter&lt;/code&gt; to get back to your unmodified vim&amp;nbsp;buffer:&lt;/p&gt;
&lt;p&gt;&lt;img alt="scr5" src="./images/vimscr5.png" /&gt;&lt;/p&gt;
&lt;p&gt;Note that you can also use &lt;code&gt;!sh&lt;/code&gt; instead of &lt;code&gt;!bash&lt;/code&gt; to type less and that all examples also work in visual&amp;nbsp;mode. &lt;/p&gt;
&lt;h2 id="vim-help"&gt;Vim help&lt;a class="headerlink" href="#vim-help" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Read the vim&amp;nbsp;help:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:help w_c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Copyheart:
&lt;a href="http://copyheart.org"&gt;♡&lt;/a&gt;2016 by Parobalth. Copying is an act of love, please&amp;nbsp;share.&lt;/p&gt;</summary><category term="bash"></category><category term="command-line"></category><category term="vim"></category></entry><entry><title>Note your last command</title><link href="http://parobalth.github.io/ncmd" rel="alternate"></link><updated>2016-02-17T21:06:00+01:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2016-02-16:ncmd</id><summary type="html">&lt;p&gt;Some time ago I started to append neat commands I don&amp;#8217;t want to forget to a file in my home directory (e.g &lt;code&gt;echo 'foo' &amp;gt;&amp;gt; ~/commands.txt&lt;/code&gt;). So I had to navigate to a previous command with &lt;code&gt;CTRL-p&lt;/code&gt;, add &amp;#8220;echo&amp;#8221;, wrap it in singlequotes and add the path to my notes file. Quite a long process to append one command to a file. I already knew that &lt;code&gt;!!&lt;/code&gt; repeats the last command but not how to get it into a file instead of being executed. Actually it works quite simple with &lt;code&gt;echo "!!" &amp;gt;&amp;gt; ~/commands.txt&lt;/code&gt; (which appends your last command to the file &amp;#8216;commands.txt&amp;#8217; in your home directory). I still wanted an easier solution so I created the following bash alias to save me some typing and to be less distraction from the actual task I&amp;#8217;m trying to get&amp;nbsp;done:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;ncmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;echo $1 &amp;gt;&amp;gt; ~/commands.md&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I added the above line to my &amp;#8220;~/.bash_aliases&amp;#8221; file and&amp;nbsp;ran &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;. .bash_aliases
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to source it. Then I started to test the above solution and noticed issues with complex arguments and wildcards. I also read that it&amp;#8217;s not recommended to use variables in bash aliases. So I searched for a proper solution and learned quite a lot about bash syntax and how to define&amp;nbsp;functions. &lt;/p&gt;
&lt;h2 id="solution"&gt;Solution&lt;a class="headerlink" href="#solution" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My final solution is the following function in my .bashrc&amp;nbsp;file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nn &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/commands.txt
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="the-power-of-history-expansion"&gt;The power of history expansion&lt;a class="headerlink" href="#the-power-of-history-expansion" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now you can use all the power of history expansion as an argument to the function &lt;code&gt;nn&lt;/code&gt;. For example &lt;code&gt;nn "!!"&lt;/code&gt; appends the last command, &lt;code&gt;nn "!-5"&lt;/code&gt; appends the 5th last, &lt;code&gt;nn "!100"&lt;/code&gt; the 100th command in your history file, &lt;code&gt;nn "!ssh"&lt;/code&gt; appends the first command with ssh in it. Read &lt;code&gt;man history&lt;/code&gt; for further examples. Double quotes are&amp;nbsp;mandatory. &lt;/p&gt;
&lt;p&gt;You can also add explanations like &lt;code&gt;nn "Commands to copy foo to bar:"&lt;/code&gt; and then append the appropriate&amp;nbsp;commands. &lt;/p&gt;
&lt;p&gt;Screenshot:
&lt;img alt="screenshot" src="./images/foo-capture.png" /&gt;&lt;/p&gt;
&lt;h2 id="fc-fix-command"&gt;fc - fix command&lt;a class="headerlink" href="#fc-fix-command" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;fc is a little programm to list or edit and re-execute commands from the history list.&amp;nbsp;Read&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;help fc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Copyheart:
&lt;a href="http://copyheart.org"&gt;♡&lt;/a&gt;2016 by Parobalth. Copying is an act of love, please&amp;nbsp;share.&lt;/p&gt;</summary><category term="bash"></category><category term="command-line"></category><category term="notes"></category><category term="append"></category><category term="history"></category><category term="fc"></category></entry><entry><title>Holiday Testing</title><link href="http://parobalth.github.io/test-post" rel="alternate"></link><updated>2015-12-29T21:06:00+01:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-12-31:test-post</id><summary type="html">&lt;p&gt;Using the holidays for some testing!
&lt;code&gt;Happy Holidays&lt;/code&gt; to all of&amp;nbsp;you!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;def foobar():&lt;/code&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;More&amp;nbsp;code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;To follow the path
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Copyheart:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://copyheart.org"&gt;♡&lt;/a&gt;2015 by Parobalth. Copying is an act of love, please&amp;nbsp;share.&lt;/p&gt;</summary></entry><entry><title>Christmas Songs</title><link href="http://parobalth.github.io/christmas-songs" rel="alternate"></link><updated>2015-12-01T19:50:00+01:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-12-01:christmas-songs</id><summary type="html">&lt;p&gt;Christmas is coming! It&amp;#8217;s already December. To bring you into christmas mood I&amp;#8217;m sharing links to some of my favorite christmas&amp;nbsp;songs:&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Have Yourself a Merry Little Christmas&amp;#8221; by Frank Sinatra:
&lt;a class="reference external" href="https://www.youtube.com/watch?v=nZ6yQgBvuoI"&gt;https://www.youtube.com/watch?v=nZ6yQgBvuoI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;White Christmas&amp;#8221; Bing Crosby &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Martha Mears:
&lt;a class="reference external" href="https://www.youtube.com/watch?v=SvfhoWIPoVw"&gt;https://www.youtube.com/watch?v=SvfhoWIPoVw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;#8220;&lt;/span&gt;Sleigh Ride&amp;#8221; John Konesky:
&lt;a class="reference external" href="https://www.youtube.com/watch?v=3dwxMh4gXcM"&gt;https://www.youtube.com/watch?v=3dwxMh4gXcM&lt;/a&gt;&lt;/p&gt;
</summary><category term="christmas"></category><category term="songs"></category><category term="music"></category></entry><entry><title>Today’s webtip - blog.joemcnally.com</title><link href="http://parobalth.github.io/todays-webtip-blogjoemcnallycom" rel="alternate"></link><updated>2015-09-30T18:26:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-09-30:todays-webtip-blogjoemcnallycom</id><summary type="html">&lt;p&gt;Today I&amp;#8217;m sharing a link to another photography blog I read on a regular basis: &lt;a class="reference external" href="http://blog.joemcnally.com"&gt;http://blog.joemcnally.com&lt;/a&gt;&lt;/p&gt;
</summary><category term="webtips"></category><category term="blogs"></category></entry><entry><title>Today’s webtip - bythom.com</title><link href="http://parobalth.github.io/todays-webtip-bythomcom" rel="alternate"></link><updated>2015-09-17T22:15:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-09-15:todays-webtip-bythomcom</id><summary type="html">&lt;p&gt;This is my first post in the Photography category.
Today I&amp;#8217;m sharing a link to a photography blog I read on a regular basis: &lt;a class="reference external" href="http://www.bythom.com/"&gt;http://www.bythom.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I can highly recommend&amp;nbsp;it!&lt;/p&gt;
</summary><category term="webtips"></category><category term="blogs"></category></entry><entry><title>Soup.io</title><link href="http://parobalth.github.io/soupio" rel="alternate"></link><updated>2015-09-15T21:45:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-09-15:soupio</id><summary type="html">&lt;p&gt;Recently I started to use soup.io. You can access my microblog at &lt;a class="reference external" href="http://parobalth.soup.io/"&gt;http://parobalth.soup.io/&lt;/a&gt;&lt;/p&gt;
</summary><category term="blogs"></category><category term="soup.io"></category></entry><entry><title>Vim - system clipboard</title><link href="http://parobalth.github.io/vim-system-clipboard" rel="alternate"></link><updated>2015-09-06T17:18:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-09-06:vim-system-clipboard</id><summary type="html">&lt;p&gt;I finally found a solution to my vim issues with the system clipboard. I just had to install vim-gtk to make &amp;#8220;*p and &amp;#8220;+p work (Debian&amp;nbsp;Wheezy).&lt;/p&gt;
&lt;p&gt;Stackoverflow post:
&lt;a class="reference external" href="http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard"&gt;http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard&lt;/a&gt;&lt;/p&gt;
</summary><category term="vim"></category><category term="clipboard"></category></entry><entry><title>First Post</title><link href="http://parobalth.github.io/first-post" rel="alternate"></link><updated>2015-09-06T17:55:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-09-06:first-post</id><summary type="html">&lt;p&gt;This is the first post. I managed to set up a pelican powered blog with github user pages. There is still a &lt;em&gt;lot&lt;/em&gt; of testing and learning&amp;nbsp;necessary!&lt;/p&gt;
&lt;p&gt;Useful links and&amp;nbsp;tutorials:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;http://mathamy.com/migrating-to-github-pages-using-pelican.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://nafiulis.me/making-a-static-blog-with-pelican.html"&gt;http://nafiulis.me/making-a-static-blog-with-pelican.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pages.github.com/"&gt;https://pages.github.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.vcheng.org/2014/02/22/migrating-from-wordpress-to-pelican/"&gt;http://www.vcheng.org/2014/02/22/migrating-from-wordpress-to-pelican/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Best place to view pelican&amp;nbsp;themes:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pelicanthemes.com"&gt;http://pelicanthemes.com&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Hello_World</title><link href="http://parobalth.github.io/hello_world" rel="alternate"></link><updated>2015-09-05T18:20:00+02:00</updated><author><name>Parobalth</name></author><id>tag:parobalth.github.io,2015-09-05:hello_world</id><summary type="html">&lt;p&gt;Hello World from Pelican! I&amp;#8217;m testing&amp;nbsp;Pelican.&lt;/p&gt;
</summary></entry></feed>